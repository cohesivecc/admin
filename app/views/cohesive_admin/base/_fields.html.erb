<%
klass ||= nil
f ||= nil
parent_klass ||= nil
%>
<% if klass && f %>

  <% klass.admin_fields.each do |k,v| %>
    <% if v[:type] == 'association' %>

      <% if v[:nested] %>

        <div class="row">
          <div class="col m10">
            <%= content_tag(:h5, v[:reflection].klass.admin_display_name.to_s.humanize.titleize) %>
          </div>
          <div class="col s12 m2 right-align">
            <a href="#" class="waves-effect waves-light btn-floating blue" data-add><i class="material-icons">add</i></a>
            <% unless [:belongs_to, :has_one].include?(v[:reflection].macro) %>
            <script data-nested-template type="text/x-handlebars-template">
              <%= f.simple_fields_for k, v[:reflection].klass.new(), child_index: "{{index}}" do |f2| %>
                <%= render(partial: 'fields', locals: { klass: v[:reflection].klass, f: f2, parent_klass: klass  }) %>
                <%= f2.hidden_field :_destroy %>
              <% end %>
            </script>
            <% end %>
          </div>
        </div>

        <ul class="collapsible popout" data-collapsible="accordion" data-nested>
          <%= f.simple_fields_for k do |f2| %>
            <li data-object="<%= f2.object.object_id %>">
              <div class="collapsible-header">
                <%= link_to(f2.object.to_label, "##{f2.object.object_id}") -%>
                <a href="#!" class="secondary-content" data-destroy="<%= f2.object.object_id %>"><i class="material-icons">delete</i></a>
              </div>
              <div class="collapsible-body">
                <%= render(partial: 'fields', locals: { klass: v[:reflection].klass, f: f2, parent_klass: klass  }) %>
                <%= f2.hidden_field :_destroy %>
              </div>
            </li>
          <% end %>
        </ul>

        <%#= link_to_add_nested("Add #{v[:reflection].klass}", f, k ) %>

      <% elsif !inverse_relationship_exists?(klass, k, parent_klass) %>
        <div class="row">
          <div class="col s12">
            <%= f.association(k, include_blank: true) %>
          </div>
        </div>
      <% end %>

    <% elsif v[:type] == 'polymorphic' %>
    
      <%= f.input(k, as: 'polymorphic') %>

    <% else %>

      <%
      input_html = {}
      input_html[:class] = 'materialize-textarea' if v[:type].to_sym == :text
      %>

      <div class="row">
        <div class="col s12">
          <% if [:boolean, :check_boxes, :radio_buttons].include?(v[:type].to_sym) %>
            <%= f.input_field(k, as: v[:type], input_html: input_html) %>
            <%= f.label(k) %>
          <% else %>
            <%= f.input(k, as: v[:type], input_html: input_html) %>
          <% end %>
        </div>
      </div>

    <% end %>
  <% end %>

<% end %>
