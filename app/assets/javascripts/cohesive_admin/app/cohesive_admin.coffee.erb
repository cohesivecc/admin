<%
# pass CohesiveAdmin config settings down to Javascript
url_helpers = CohesiveAdmin::Engine.routes.url_helpers

models = {}
CohesiveAdmin.config.managed_models.each {|m| models[m.name] = m.admin_attributes }

aws = nil
unless CohesiveAdmin.config.aws.blank?
  # Froala requires that we provide the region-specific endpoint as the 'region' parameter. We'll use the aws-sdk gem to provide this.
  bucket = Aws::S3::Bucket.new(CohesiveAdmin.config.aws[:bucket], { region: CohesiveAdmin.config.aws[:region] })
  region = bucket.client.config.endpoint.host.gsub(/\.amazonaws\.com\Z/, '')

  aws = {
      bucket:         CohesiveAdmin.config.aws[:bucket],
      region:         region,
      key_start:      CohesiveAdmin.config.aws[:key_start],
      acl:            CohesiveAdmin.config.aws[:acl],
      access_key_id:  CohesiveAdmin.config.aws[:access_key_id],
      policy:         CohesiveAdmin::AmazonSignature.policy,
      signature:      CohesiveAdmin::AmazonSignature.signature,
      assets:         {
                        index:      url_helpers.s3_assets_path,
                        delete:     url_helpers.delete_s3_assets_path,
                        preloader:  ActionController::Base.helpers.asset_path('cohesive_admin/preloader.gif')
                      }
  }
end


froala = { key: CohesiveAdmin.config.froala[:key] }

%>


class window.CohesiveAdmin
  @managed_models = <%= models.to_json %>
  @aws            = <%= aws.to_json %>
  @froala         = <%= froala.to_json %>
  @mount_point    = <%= url_helpers.root_path %>

  @initialize: () ->
    $(document).trigger('froala.init')
